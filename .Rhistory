arrange(-Visitors)
parkTotals
load("parkVisits.Rda")
parkTotals <- parks %>%
filter(Year==2016) %>%
arrange(-Visitors)
parkTotals
head(parkTotals, 20)
parks
parks %>%
ggplot(aes(x=Name, y=Visitors)) +
geom_violin() +
theme_minimal()
parks %>%
ggplot(aes(x=Name, y=Visitors)) +
geom_violin() +
theme_minimal() +
coord_flip()
parks %>%
ggplot(aes(x=Name, y=Visitors)) +
geom_violin() +
theme_minimal() +
coord_flip()
parks %>%
ggplot(aes(x=Name, y=Visitors)) +
geom_violin() +
theme_minimal() +
coord_flip()
parks %>%
ggplot(aes(x=ShortName, y=Visitors, group=ShortName)) +
geom_path() +
theme_minimal() +
coord_flip()
parks %>%
ggplot(aes(x=ShortName, y=Visitors, group=ShortName)) +
geom_path() +
theme_minimal() +
coord_flip()
parks %>%
ggplot(aes(x=ShortName, y=Visitors, group=ShortName)) +
geom_jitter() +
theme_minimal() +
coord_flip()
parks %>%
ggplot(aes(x=ShortName, y=Visitors, group=ShortName)) +
geom_point(aplha=.1, size=.1) +
theme_minimal() +
coord_flip()
parks %>%
ggplot(aes(x=ShortName, y=Visitors, group=ShortName)) +
geom_point(aes(aplha=year), size=.1) +
theme_minimal() +
coord_flip()
parks %>%
ggplot(aes(x=ShortName, y=Visitors, group=ShortName)) +
geom_point(aes(aplha=Year), size=.1) +
theme_minimal() +
coord_flip()
parks %>%
ggplot(aes(x=ShortName, y=Visitors, group=ShortName)) +
geom_point(aes(alpha=Year), size=.1) +
theme_minimal() +
coord_flip()
parks %>%
ggplot(aes(x=ShortName, y=Visitors, group=ShortName)) +
geom_point(aes(alpha=Year/100), size=.1) +
theme_minimal() +
coord_flip()
parks %>%
ggplot(aes(x=ShortName, y=Visitors, group=ShortName)) +
geom_point(aes(alpha=Year), size=.1, alpha=alpha/10) +
theme_minimal() +
coord_flip()
parks %>%
ggplot(aes(x=ShortName, y=Visitors, group=ShortName)) +
geom_point(aes(alpha=Year), size=.1) +
theme_minimal() +
coord_flip()
parks %>%
ggplot(aes(x=ShortName, y=Visitors, group=ShortName)) +
geom_point(aes(alpha=Year), size=.1) +
theme_minimal() +
coord_flip()
top10 <- parkTotals$ShortName[1:10]
top10
parks %>%
ggplot(aes(x=Year, y=Visitors, group=ShortName)) +
geom_path() +
theme_minimal()
parks %>%
ggplot(aes(x=Year, y=Visitors, group=ShortName)) +
geom_path(alpha=.5) +
theme_minimal()
parks$Label <- ifelse(parks==2016,
ifelse(parks$ShortName %in% top10, parks$ShortName, NA))# get total visitors by year
parks$Label <- ifelse(parks==2016,
ifelse(parks$ShortName %in% top10, parks$ShortName, NA), NA)# get total visitors by year
View(parks)
load("parkVisits.Rda")
parkTotals <- parks %>%
filter(Year==2016) %>%
arrange(-Visitors)
top10 <- parkTotals$ShortName[1:10]
parks$Label <- ifelse(parks$Year==2016,
ifelse(parks$ShortName %in% top10, parks$ShortName, NA), NA)# get total visitors by year
knitr::opts_chunk$set(echo = TRUE)
# load packages
library(tidyverse)
library(ggthemes)
library(cowplot)
library(ggrepel)
# load data
load("parkVisits.Rda")
parks %>%
ggplot(aes(x=Year, y=Visitors, group=ShortName)) +
geom_path(alpha=.5) +
geom_text(aes(label=Label)) +
theme_minimal()
parks
parks$Label <- ifelse(parks$Year==2016,
ifelse(parks$ShortName %in% top10, parks$ShortName, NA), NA)# get total visitors by year
parks
parks %>%
ggplot(aes(x=Year, y=Visitors, group=ShortName)) +
geom_path(alpha=.5) +
geom_text(aes(label=Label)) +
theme_minimal()
parks %>%
ggplot(aes(x=Year, y=Visitors, group=ShortName)) +
geom_path(alpha=.5) +
geom_text_repel(aes(label=Label)) +
theme_minimal()
parks %>%
ggplot(aes(x=Year, y=Visitors, group=ShortName)) +
geom_path(alpha=.5) +
geom_label_repel(aes(label=Label)) +
theme_minimal()
load("parkVisits.Rda")
parks %>% group_by(Year) %>%
summarise(N = n(), Total = sum(Visitors))
totals <- parks %>% group_by(Year) %>%
summarise(N = n(), Total = sum(Visitors))
inner_join(parks, totals)
totals <- parks %>% group_by(Year) %>%
summarise(YearTotal = sum(Visitors))
inner_join(parks, totals)
parks <- parks %>% mutate(Share = Visitors/YearTotal)
parks <- inner_join(parks, totals)
parks <- parks %>% mutate(Share = Visitors/YearTotal)
parks %>%
ggplot(aes(x=Year, y=Share, group=ShortName)) +
geom_path(alpha=.5) +
geom_label_repel(aes(label=Label)) +
theme_minimal()
parks %>%
ggplot(aes(x=Year, y=Share, group=ShortName)) +
geom_path(alpha=.5) +
theme_minimal()
parkTotals <- parks %>%
filter(Year==2016) %>%
arrange(-Visitors)
top10 <- parkTotals$ShortName[1:10]
parks$Label <- ifelse(parks$Year==2016,
ifelse(parks$ShortName %in% top10, parks$ShortName, NA), NA)# get total visitors by year
parks %>%
ggplot(aes(x=Year, y=Share, group=ShortName)) +
geom_path(alpha=.5) +
geom_label_repel(aes(label=Label)) +
theme_minimal()
parks %>%
ggplot(aes(x=Year, y=Share, group=ShortName)) +
geom_path(aes(color=ShortName), alpha=.5) +
geom_label_repel(aes(label=Label)) +
theme_minimal()
parks %>%
ggplot(aes(x=Year, y=Share, group=ShortName)) +
geom_path(aes(color=ShortName), alpha=.5) +
geom_text(aes(label=Label)) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
# load packages
library(tidyverse)
library(ggthemes)
library(cowplot)
library(ggrepel)
# load data
load("parkVisits.Rda")
# get total by year
totals <- parks %>% group_by(Year) %>%
summarise(YearTotal = sum(Visitors))
# merge
parks <- inner_join(parks, totals)
parks <- parks %>% mutate(Share = Visitors/YearTotal)
# get top 10 parks
parkTotals <- parks %>%
filter(Year==2016) %>%
arrange(-Visitors)
top10 <- parkTotals$ShortName[1:10]
c[1]
c <- parkTotals
c$ShortName <- factor(c$ShortName, levels = c$ShortName[order(c$PersonAcre)])
c[1,]
c[1,1]
1+1
c$PersonAcre[1]
c
c <- parkTotals %>% arrange(-PersonAcre)
c$ShortName <- factor(c$ShortName, levels = c$ShortName[order(c$PersonAcre)])
c$PersonAcre[1]
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
# geom_hline(yintercept = mean(c$PersonAcre)) +
ylim(c(0, 75)) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
# geom_hline(yintercept = mean(c$PersonAcre)) +
ylim(c(0, 80)) +
scale_fill_manual(values=c("grey40", "grey40", rep("grey50", 57))) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c <- parkTotals %>% arrange(-PersonAcre)
c$ShortName <- factor(c$ShortName, levels = c$ShortName[order(c$PersonAcre)])
c$PersonAcre[1] <- 80
c$PersonAcre[2] <- 80
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
# geom_hline(yintercept = mean(c$PersonAcre)) +
ylim(c(0, 80)) +
scale_fill_manual(values=c("grey40", "grey40", rep("grey50", 57))) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
# geom_hline(yintercept = mean(c$PersonAcre)) +
ylim(c(0, 80)) +
scale_fill_manual(values=c("blue", "grey40", rep("grey50", 57))) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(aes(fill=Year), stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
# geom_hline(yintercept = mean(c$PersonAcre)) +
ylim(c(0, 80)) +
scale_fill_manual(values=c("grey40", "grey40", rep("grey50", 57))) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(aes(fill=Visitors), stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
# geom_hline(yintercept = mean(c$PersonAcre)) +
ylim(c(0, 80)) +
scale_fill_manual(values=c("grey40", "grey40", rep("grey50", 57))) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(aes(fill=""), stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
# geom_hline(yintercept = mean(c$PersonAcre)) +
ylim(c(0, 80)) +
scale_fill_manual(values=c("grey40", "grey40", rep("grey50", 57))) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(aes(fill=""), stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
# geom_hline(yintercept = mean(c$PersonAcre)) +
ylim(c(0, 80)) +
scale_fill_manual(values=c(rep("grey50", 57), "blue", "blue")) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c(rep("grey50", 57), "blue", "blue")
c
c$Label <- c("grey40", "grey40", rep("grey50", 57))
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(aes(fill=Label), stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
# geom_hline(yintercept = mean(c$PersonAcre)) +
ylim(c(0, 80)) +
scale_fill_manual(values=c(rep("grey50", 57), "blue", "blue")) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(aes(fill=Label), stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
# geom_hline(yintercept = mean(c$PersonAcre)) +
ylim(c(0, 80)) +
# scale_fill_manual(values=c(rep("grey50", 57), "blue", "blue")) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(aes(fill=Label), stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
# geom_hline(yintercept = mean(c$PersonAcre)) +
ylim(c(0, 80)) +
scale_fill_manual(values=c("grey40", "grey50") +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c %>%
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(aes(fill=Label), stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
# geom_hline(yintercept = mean(c$PersonAcre)) +
ylim(c(0, 80)) +
scale_fill_manual(values=c("grey40", "grey50")) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(aes(fill=Label), stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
# geom_hline(yintercept = mean(c$PersonAcre)) +
ylim(c(0, 80)) +
scale_fill_manual(values=c("grey30", "grey50")) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(aes(fill=Label), stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
# geom_hline(yintercept = mean(c$PersonAcre)) +
ylim(c(0, 80)) +
scale_fill_manual(values=c("grey25", "grey50")) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c$Label <- c(1, 1, rep(2, 57))
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(aes(fill=Label), stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
ylim(c(0, 80)) +
scale_fill_manual(values=c("grey25", "grey50")) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c$Label <- c("trunc", "trunc", rep("normal", 57))
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(aes(fill=Label), stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
ylim(c(0, 80)) +
scale_fill_manual(values=c("grey25", "grey50")) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(aes(fill=Label), stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
ylim(c(0, 80)) +
scale_fill_manual(values=c("grey50", "grey25")) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(aes(fill=Label), stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
ylim(c(0, 80)) +
scale_fill_manual(values=c("grey50", "grey25"), guide=FALSE) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks",
y="Visitors per acre", x="National Park")
c
c %>% arrange(Area)
c <- parkTotals %>% arrange(-PersonAcre)
c
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(aes(fill=Region), stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
ylim(c(0, 80)) +
scale_alpha_manual(values=c(0.2, 1), guide=FALSE) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks\nValues for Channel Islands and Hot Springs have been truncated",
y="Visitors per acre", x="National Park")
c <- parkTotals %>% arrange(-PersonAcre)
c$ShortName <- factor(c$ShortName, levels = c$ShortName[order(c$PersonAcre)])
c$PersonAcre[1] <- 80
c$PersonAcre[2] <- 80
c %>%
ggplot(aes(x=ShortName, y=PersonAcre)) +
geom_bar(aes(fill=Region), stat="identity") +
geom_hline(yintercept = 82895409/51953793) +
ylim(c(0, 80)) +
scale_alpha_manual(values=c(0.2, 1), guide=FALSE) +
theme_minimal() +
coord_flip() +
labs(title="National Parks ranked by crowd-factor",
subtitle="Data from 2016",
caption="\nLine indicates average crowd-factor across all National Parks\nValues for Channel Islands and Hot Springs have been truncated",
y="Visitors per acre", x="National Park")
parkTotals %>%
ggplot(aes(x=Region, y=Share)) +
geom_jitter(aes(size=Share), alpha=.5, position=position_jitter(width=0.3)) +
theme_minimal() +
geom_label_repel(data=parkTotals %>% na.omit, aes(label=Label, color=Label), size=2) +
scale_size_continuous(guide=FALSE) +
scale_color_brewer(palette = "Paired", guide=FALSE) +
labs(title="Visitor share for National Parks by region",
subtitle="Data from 2016",
y="Visitor share")
parkTotals$Label <- as.factor(ifelse(parkTotals$Visitors>2900000, as.character(parkTotals$ShortName), NA))
parkTotals %>%
ggplot(aes(x=Region, y=Share)) +
geom_jitter(aes(size=Share), alpha=.5, position=position_jitter(width=0.3)) +
theme_minimal() +
geom_label_repel(data=parkTotals %>% na.omit, aes(label=Label, color=Label), size=2) +
scale_size_continuous(guide=FALSE) +
scale_color_brewer(palette = "Paired", guide=FALSE) +
labs(title="Visitor share for National Parks by region",
subtitle="Data from 2016",
y="Visitor share")
parkTotals %>%
ggplot(aes(x=Region, y=Share)) +
geom_jitter(aes(size=Share), alpha=.5, position=position_jitter(width=0.1)) +
theme_minimal() +
geom_label_repel(data=parkTotals %>% na.omit, aes(label=Label, color=Label), size=2) +
scale_size_continuous(guide=FALSE) +
scale_color_brewer(palette = "Paired", guide=FALSE) +
labs(title="Visitor share for National Parks by region",
subtitle="Data from 2016",
y="Visitor share")
